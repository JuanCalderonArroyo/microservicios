{
    "9beb3870": "from fastapi import FastAPI",
    "4d88154a": "from fastapi import FastAPI\napp = FastAPI()\n\n@app.get(\"/ping\")\ndef ping():\n    return {\"msg\": \"pong desde Docker\"}",
    "c9585ab5": "from fastapi import FastAPI\nimport requests\n\napp = FastAPI()\n\n# Endpoint de prueba: trae usuarios desde una API p\u00fablica\n@app.get(\"/usuarios\")\ndef get_users():\n    res = requests.get(\"https://jsonplaceholder.typicode.com/users\")\n    data = res.json()\n\n    # Ejemplo de procesamiento: devolver solo los nombres\n    nombres = [u[\"name\"] for u in data]\n    return {\"usuarios\": nombres}",
    "acea1fbc": "from fastapi import FastAPI\nimport requests\n\napp = FastAPI()\n\n# Endpoint de prueba: trae usuarios desde una API p\u00fablica\n@app.get(\"/usuarios\")\ndef get_users():\n    res = requests.get(\"https://jsonplaceholder.typicode.com/users\")\n    data = res.json()\n\n    # Ejemplo de procesamiento: devolver solo los nombres\n    nombres = [u[\"name\"] for u in data]\n    return {\"usuarios\": nombres}",
    "331a8c80": " from fastapi import FastAPI\nimport requests\n\napp = FastAPI()\n\n# Endpoint de prueba: trae usuarios desde una API p\u00fablica\n@app.get(\"/usuarios\")\ndef get_users():\n    res = requests.get(\"https://jsonplaceholder.typicode.com/users\")\n    data = res.json()\n\n    # Ejemplo de procesamiento: devolver solo los nombres\n    nombres = [u[\"name\"] for u in data]\n    return {\"usuarios\": nombres}#holaaaa",
    "06d4e090": "from fastapi import FastAPI\nimport requests\nimport pandas as pd\nimport os\n\napp = FastAPI()\n\n@app.get(\"/test\")\ndef test():\n    return {\"msg\": \"Hola\"}",
    "e41abfa2": "from fastapi import FastAPI\nimport requests\n\napp = FastAPI()\n\n# Endpoint de prueba: trae usuarios desde una API p\u00fablica\n@app.get(\"/usuarios\")\ndef get_users():\n    res = requests.get(\"https://jsonplaceholder.typicode.com/users\")\n    data = res.json()\n\n    # Ejemplo de procesamiento: devolver solo los nombres\n    nombres = [u[\"name\"] for u in data]\n    return {\"usuarios\": nombres}",
    "100188eb": "import requests\n\napp = FastAPI()\n\n# Endpoint de prueba: trae usuarios desde una API p\u00fablica\n@app.get(\"/usuarios\")\ndef get_users():\n    res = requests.get(\"https://jsonplaceholder.typicode.com/users\", timeout=5)\n    data = res.json()\n\n    # Ejemplo de procesamiento: devolver solo los nombres\n    nombres = [u[\"name\"] for u in data]\n    return {\"usuarios\": nombres}",
    "4709c3a1": "from fastapi import FastAPI\nimport requests\n\napp = FastAPI()\n\nPOKEAPI_URL = \"https://pokeapi.co/api/v2/pokemon/\"\n\n@app.get(\"/pokemon/{name}\")\ndef get_pokemon(name: str):\n    try:\n        response = requests.get(POKEAPI_URL + name.lower())\n        response.raise_for_status()\n        data = response.json()\n\n        nombre = data['name'].capitalize()\n        habilidades = [a['ability']['name'] for a in data['abilities']]\n        tipos = [t['type']['name'] for t in data['types']]\n\n        return {\n            \"nombre\": nombre,\n            \"habilidades\": habilidades,\n            \"tipos\": tipos\n        }\n\n    except requests.exceptions.HTTPError as e:\n        return {\"error\": f\"No se encontr\u00f3 el Pok\u00e9mon '{name}'\"}\n    except Exception as e:\n        return {\"error\": str(e)}",
    "0fa4c749": "from fastapi import FastAPI import requests import pandas as pd import os app = FastAPI() @app.get(\"/test\") def test(): return {\"msg\": \"Hola\"}",
    "481aacc0": "from fastapi import FastAPI\nimport requests\nimport pandas as pd\nimport os\n\napp = FastAPI()\n\n@app.get(\"/test\")\ndef test():\n    return {\"msg\": \"Hola\"}",
    "f8ce9859": "from fastapi import FastAPI\nimport requests\n\napp = FastAPI()\n\nPOKEAPI_URL = \"https://pokeapi.co/api/v2/pokemon/\"\n\n@app.get(\"/pokemon/{name}\")\ndef get_pokemon(name: str):\n    try:\n        response = requests.get(POKEAPI_URL + name.lower())\n        response.raise_for_status()\n        data = response.json()\n\n        nombre = data['name'].capitalize()\n        habilidades = [a['ability']['name'] for a in data['abilities']]\n        tipos = [t['type']['name'] for t in data['types']]\n\n        return {\n            \"nombre\": nombre,\n            \"habilidades\": habilidades,\n            \"tipos\": tipos\n        }\n\n    except requests.exceptions.HTTPError as e:\n        return {\"error\": f\"No se encontr\u00f3 el Pok\u00e9mon '{name}'\"}\n    except Exception as e:\n        return {\"error\": str(e)}",
    "f80235c8": "from fastapi import FastAPI\nimport requests\n\napp = FastAPI()\n\nPOKEAPI_URL = \"https://pokeapi.co/api/v2/pokemon/\"\n\n@app.get(\"/pokemon/{name}\")\ndef get_pokemon(name: str):\n    try:\n        response = requests.get(POKEAPI_URL + name.lower())\n        response.raise_for_status()\n        data = response.json()\n\n        nombre = data['name'].capitalize()\n        habilidades = [a['ability']['name'] for a in data['abilities']]\n        tipos = [t['type']['name'] for t in data['types']]\n\n        return {\n            \"nombre\": nombre,\n            \"habilidades\": habilidades,\n            \"tipos\": tipos\n        }\n\n    except requests.exceptions.HTTPError as e:\n        return {\"error\": f\"No se encontr\u00f3 el Pok\u00e9mon '{name}'\"}\n    except Exception as e:\n        return {\"error\": str(e)}",
    "c7be6d62": "from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\ndef read_root():\n    return {\"mensaje\": \"Hola mundo\"}",
    "041c8b08": " from fastapi import FastAPI\nimport requests\nimport pandas as pd\nimport os\n\napp = FastAPI()\n\n@app.get(\"/test\")\ndef test():\n    return {\"msg\": \"Hola\"}",
    "6960230c": " from fastapi import FastAPI\nimport requests\nimport pandas as pd\nimport os\n\napp = FastAPI()\n\n@app.get(\"/test\")\ndef test():\n    return {\"msg\": \"Hola\"}",
    "47b1de36": "from fastapi import FastAPI\nimport requests\nimport pandas as pd\nimport os\n\napp = FastAPI()\n\n@app.get(\"/test\")\ndef test():\n    return {\"msg\": \"Hola\"}\n#HOLA",
    "30b7ae50": "from fastapi import FastAPI\n\n# Crear la instancia de la aplicaci\u00f3n FastAPI\napp = FastAPI()\n\n# Ruta ra\u00edz del microservicio\n@app.get(\"/\")\ndef read_root():\n    return {\"mensaje\": \"Hola desde el microservicio\"}",
    "cc6b6ebc": "from fastapi import FastAPI\nimport requests\n\napp = FastAPI()\n\nPOKEAPI_URL = \"https://pokeapi.co/api/v2/pokemon/\"\n\n@app.get(\"/pokemon/{name}\")\ndef get_pokemon(name: str):\n    try:\n        response = requests.get(POKEAPI_URL + name.lower())\n        response.raise_for_status()\n        data = response.json()\n\n        nombre = data['name'].capitalize()\n        habilidades = [a['ability']['name'] for a in data['abilities']]\n        tipos = [t['type']['name'] for t in data['types']]\n\n        return {\n            \"nombre\": nombre,\n            \"habilidades\": habilidades,\n            \"tipos\": tipos\n        }\n\n    except requests.exceptions.HTTPError as e:\n        return {\"error\": f\"No se encontr\u00f3 el Pok\u00e9mon '{name}'\"}\n    except Exception as e:\n        return {\"error\": str(e)}",
    "f8af5e4d": "from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\ndef read_root():\n    return {\"message\": \"Hola Inge\"}\n",
    "d6a9df91": "from flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route(\"/sumar\", methods=[\"GET\"])\ndef sumar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a + b})\n\nif __name__ == \"__main__\":\n    app.run()",
    "sumar": "from flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route(\"/sumar\", methods=[\"GET\"])\ndef sumar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a + b})\n\nif __name__ == \"__main__\":\n    app.run()",
    "prueba": "print(\"hola\")",
    "yo": "awadadad",
    "pokemonyo": "from fastapi import FastAPI\nimport requests\n\napp = FastAPI()\n\nPOKEAPI_URL = \"https://pokeapi.co/api/v2/pokemon/\"\n\n@app.get(\"/pokemon/{name}\")\ndef get_pokemon(name: str):\n    try:\n        response = requests.get(POKEAPI_URL + name.lower())\n        response.raise_for_status()\n        data = response.json()\n\n        nombre = data['name'].capitalize()\n        habilidades = [a['ability']['name'] for a in data['abilities']]\n        tipos = [t['type']['name'] for t in data['types']]\n\n        return {\n            \"nombre\": nombre,\n            \"habilidades\": habilidades,\n            \"tipos\": tipos\n        }\n\n    except requests.exceptions.HTTPError as e:\n        return {\"error\": f\"No se encontr\u00f3 el Pok\u00e9mon '{name}'\"}\n    except Exception as e:\n        return {\"error\": str(e)}",
    "sumandoando": "from flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route(\"/sumar\", methods=[\"GET\"])\ndef sumar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a + b})\n\nif __name__ == \"__main__\":\n    app.run()",
    "menos": "from flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route(\"/sumar\", methods=[\"GET\"])\ndef sumar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a + b})\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=8000)\n",
    "sss": "from flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route(\"/sumar\", methods=[\"GET\"])\ndef sumar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a + b})\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=8000)\n",
    "calcu": "from flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route(\"/sumar\", methods=[\"GET\"])\ndef sumar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a + b})\n\n@app.route(\"/restar\", methods=[\"GET\"])\ndef restar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a - b})\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=8000)\n",
    "calcula": "from flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route(\"/sumar\", methods=[\"GET\"])\ndef sumar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a + b})\n\n@app.route(\"/restar\", methods=[\"GET\"])\ndef restar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a - b})\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=8000)\n",
    "ms-307cdce6-caa": "from flask import Flask, request, jsonify\n\napp = Flask(__name__)\n\n@app.route(\"/sumar\", methods=[\"GET\"])\ndef sumar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a + b})\n\n@app.route(\"/restar\", methods=[\"GET\"])\ndef restar():\n    a = int(request.args.get(\"a\", 0))\n    b = int(request.args.get(\"b\", 0))\n    return jsonify({\"resultado\": a - b})\n\nif __name__ == \"__main__\":\n    app.run(host=\"0.0.0.0\", port=8000)\n"
}